{"ast":null,"code":"import { createAsyncThunk, createSlice, isPending, isRejected } from \"@reduxjs/toolkit\";\nimport { createStudent, deleteStudent, filterStudent, getByIdStudent, updateStudent } from \"../../../shared/api/student.api\";\n// import { createUser, filterUser, getByIdUser, updateUser } from \"../../../shared/apis/user.api\";\n// import { serializeAxiosError } from \"../../../shared/utils/reducer.utils\";\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: null,\n  entity: {},\n  updating: false,\n  updateSuccess: false,\n  creating: false,\n  createSuccess: false,\n  pageSearch: 1,\n  totalCount: 0\n};\nexport const emptyStudentUntitiesAsync = createAsyncThunk(\"student/empty\", async data => {\n  const res = \"\";\n  return res;\n}, {\n  // serializeError: serializeAxiosError,\n});\nexport const searchStudentEntitiesAsync = createAsyncThunk(\"student/search\", async data => {\n  const res = await filterStudent(data);\n  return res;\n});\nexport const createStudentAsync = createAsyncThunk(\"student/create\", async data => {\n  const res = await createStudent(data);\n  return res;\n}, {\n  // serializeError: serializeAxiosError,\n});\nexport const updateStudentAsync = createAsyncThunk(\"student/update\", async data => {\n  const res = await updateStudent(data);\n  return res;\n}, {\n  // serializeError: serializeAxiosError,\n});\nexport const getByIdStudentAsync = createAsyncThunk(\"student/get-by-id\", async id => {\n  const res = await getByIdStudent(id);\n  return res;\n}, {\n  // serializeError: serializeAxiosError,\n});\nexport const deleteStudentEntitiesAsync = createAsyncThunk(\"student/delete\", async id => {\n  const res = await deleteStudent(id);\n  return res;\n});\nconst StudentSlice = createSlice({\n  name: \"Student\",\n  initialState,\n  reducers: {\n    reset(state, action) {\n      return initialState;\n    },\n    changePageSearch(state, action) {\n      return {\n        ...state,\n        pageSearch: action.payload\n      };\n    },\n    changeUpdateSuccess(state, action) {\n      return {\n        ...state,\n        updateSuccess: action.payload\n      };\n    },\n    changeCreateSuccess(state, action) {\n      return {\n        ...state,\n        createSuccess: action.payload\n      };\n    }\n  },\n  extraReducers: build => {\n    build.addCase(emptyStudentUntitiesAsync.fulfilled, state => {\n      return {\n        ...state,\n        entities: null,\n        loading: false\n      };\n    }).addCase(searchStudentEntitiesAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n        // totalCount: parseInt(action.payload.headers[TOTAL_HEADER])\n      };\n    }).addCase(updateStudentAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        updateSuccess: true\n      };\n    }).addCase(createStudentAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        createSuccess: true\n      };\n    }).addCase(getByIdStudentAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    }).addMatcher(isPending(emptyStudentUntitiesAsync, searchStudentEntitiesAsync, createStudentAsync, updateStudentAsync, updateStudentAsync), (state, action) => {\n      return {\n        ...state,\n        loading: true\n      };\n    }).addMatcher(isRejected(emptyStudentUntitiesAsync, searchStudentEntitiesAsync, createStudentAsync, updateStudentAsync, updateStudentAsync), (state, action) => {\n      return {\n        ...state,\n        loading: false\n      };\n    });\n  }\n});\nexport const {\n  reset,\n  changePageSearch,\n  changeUpdateSuccess,\n  changeCreateSuccess\n} = StudentSlice.actions;\nexport default StudentSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","isPending","isRejected","createStudent","deleteStudent","filterStudent","getByIdStudent","updateStudent","initialState","loading","errorMessage","entities","entity","updating","updateSuccess","creating","createSuccess","pageSearch","totalCount","emptyStudentUntitiesAsync","data","res","searchStudentEntitiesAsync","createStudentAsync","updateStudentAsync","getByIdStudentAsync","id","deleteStudentEntitiesAsync","StudentSlice","name","reducers","reset","state","action","changePageSearch","payload","changeUpdateSuccess","changeCreateSuccess","extraReducers","build","addCase","fulfilled","addMatcher","actions","reducer"],"sources":["C:/Users/Acer/OneDrive/Máy tính/minhanh/react-springboot-qlsinhvien-master/ql-sinh-vien/src/features/Students/redux/student.reducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, isPending, isRejected } from \"@reduxjs/toolkit\";\nimport { createStudent, deleteStudent, filterStudent, getByIdStudent, updateStudent } from \"../../../shared/api/student.api\";\n// import { createUser, filterUser, getByIdUser, updateUser } from \"../../../shared/apis/user.api\";\n// import { serializeAxiosError } from \"../../../shared/utils/reducer.utils\";\n\nconst initialState: any = {\n    loading: false,\n    errorMessage: null,\n    entities: null,\n    entity: {},\n    updating: false,\n    updateSuccess: false,\n    creating: false,\n    createSuccess: false,\n    pageSearch: 1,\n    totalCount: 0,\n};\n\nexport const emptyStudentUntitiesAsync = createAsyncThunk(\n    \"student/empty\",\n    async (data: any) => {\n        const res = \"\";\n        return res;\n    },\n    {\n        // serializeError: serializeAxiosError,\n    }\n);\n\nexport const searchStudentEntitiesAsync = createAsyncThunk(\"student/search\", async (data: any) => {\n    const res = await filterStudent(data);\n    return res;\n});\n\nexport const createStudentAsync = createAsyncThunk(\n    \"student/create\",\n    async (data: any) => {\n        const res = await createStudent(data);\n        return res;\n    },\n    {\n        // serializeError: serializeAxiosError,\n    }\n);\n\nexport const updateStudentAsync = createAsyncThunk(\n    \"student/update\",\n    async (data: any) => {\n        const res = await updateStudent(data);\n        return res;\n    },\n    {\n        // serializeError: serializeAxiosError,\n    }\n);\n\nexport const getByIdStudentAsync = createAsyncThunk(\n    \"student/get-by-id\",\n    async (id: any) => {\n        const res = await getByIdStudent(id);\n        return res;\n    },\n    {\n        // serializeError: serializeAxiosError,\n    }\n);\nexport const deleteStudentEntitiesAsync = createAsyncThunk(\"student/delete\", async (id: any) => {\n    const res = await deleteStudent(id);\n    return res;\n});\n\nconst StudentSlice = createSlice({\n    name: \"Student\",\n    initialState,\n    reducers: {\n        reset(state, action) {\n            return initialState;\n        },\n        changePageSearch(state, action) {\n            return {\n                ...state,\n                pageSearch: action.payload,\n            };\n        },\n        changeUpdateSuccess(state, action) {\n            return {\n                ...state,\n                updateSuccess: action.payload,\n            };\n        },\n        changeCreateSuccess(state, action) {\n            return {\n                ...state,\n                createSuccess: action.payload,\n            };\n        },\n    },\n    extraReducers: (build) => {\n        build\n            .addCase(emptyStudentUntitiesAsync.fulfilled, (state) => {\n                return {\n                    ...state,\n                    entities: null,\n                    loading: false,\n                };\n            })\n            .addCase(searchStudentEntitiesAsync.fulfilled, (state, action) => {\n                return {\n                    ...state,\n                    loading: false,\n                    entities: action.payload.data,\n                    // totalCount: parseInt(action.payload.headers[TOTAL_HEADER])\n                };\n            })\n            .addCase(updateStudentAsync.fulfilled, (state, action) => {\n                return {\n                    ...state,\n                    loading: false,\n                    updateSuccess: true,\n                };\n            })\n            .addCase(createStudentAsync.fulfilled, (state, action) => {\n                return {\n                    ...state,\n                    loading: false,\n                    createSuccess: true,\n                };\n            })\n            .addCase(getByIdStudentAsync.fulfilled, (state, action) => {\n                return {\n                    ...state,\n                    loading: false,\n                    entity: action.payload.data,\n                };\n            })\n            .addMatcher(\n                isPending(\n                    emptyStudentUntitiesAsync,\n                    searchStudentEntitiesAsync,\n                    createStudentAsync,\n                    updateStudentAsync,\n                    updateStudentAsync\n                ),\n                (state, action) => {\n                    return {\n                        ...state,\n                        loading: true,\n                    };\n                }\n            )\n            .addMatcher(\n                isRejected(\n                    emptyStudentUntitiesAsync,\n                    searchStudentEntitiesAsync,\n                    createStudentAsync,\n                    updateStudentAsync,\n                    updateStudentAsync\n                ),\n                (state, action) => {\n                    return {\n                        ...state,\n                        loading: false,\n                    };\n                }\n            );\n    },\n});\n\nexport const { reset, changePageSearch, changeUpdateSuccess, changeCreateSuccess } = StudentSlice.actions;\n\nexport default StudentSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACvF,SAASC,aAAa,EAAEC,aAAa,EAAEC,aAAa,EAAEC,cAAc,EAAEC,aAAa,QAAQ,iCAAiC;AAC5H;AACA;;AAEA,MAAMC,YAAiB,GAAG;EACtBC,OAAO,EAAE,KAAK;EACdC,YAAY,EAAE,IAAI;EAClBC,QAAQ,EAAE,IAAI;EACdC,MAAM,EAAE,CAAC,CAAC;EACVC,QAAQ,EAAE,KAAK;EACfC,aAAa,EAAE,KAAK;EACpBC,QAAQ,EAAE,KAAK;EACfC,aAAa,EAAE,KAAK;EACpBC,UAAU,EAAE,CAAC;EACbC,UAAU,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,yBAAyB,GAAGpB,gBAAgB,CACrD,eAAe,EACf,MAAOqB,IAAS,IAAK;EACjB,MAAMC,GAAG,GAAG,EAAE;EACd,OAAOA,GAAG;AACd,CAAC,EACD;EACI;AAAA,CACH,CACJ;AAED,OAAO,MAAMC,0BAA0B,GAAGvB,gBAAgB,CAAC,gBAAgB,EAAE,MAAOqB,IAAS,IAAK;EAC9F,MAAMC,GAAG,GAAG,MAAMhB,aAAa,CAACe,IAAI,CAAC;EACrC,OAAOC,GAAG;AACd,CAAC,CAAC;AAEF,OAAO,MAAME,kBAAkB,GAAGxB,gBAAgB,CAC9C,gBAAgB,EAChB,MAAOqB,IAAS,IAAK;EACjB,MAAMC,GAAG,GAAG,MAAMlB,aAAa,CAACiB,IAAI,CAAC;EACrC,OAAOC,GAAG;AACd,CAAC,EACD;EACI;AAAA,CACH,CACJ;AAED,OAAO,MAAMG,kBAAkB,GAAGzB,gBAAgB,CAC9C,gBAAgB,EAChB,MAAOqB,IAAS,IAAK;EACjB,MAAMC,GAAG,GAAG,MAAMd,aAAa,CAACa,IAAI,CAAC;EACrC,OAAOC,GAAG;AACd,CAAC,EACD;EACI;AAAA,CACH,CACJ;AAED,OAAO,MAAMI,mBAAmB,GAAG1B,gBAAgB,CAC/C,mBAAmB,EACnB,MAAO2B,EAAO,IAAK;EACf,MAAML,GAAG,GAAG,MAAMf,cAAc,CAACoB,EAAE,CAAC;EACpC,OAAOL,GAAG;AACd,CAAC,EACD;EACI;AAAA,CACH,CACJ;AACD,OAAO,MAAMM,0BAA0B,GAAG5B,gBAAgB,CAAC,gBAAgB,EAAE,MAAO2B,EAAO,IAAK;EAC5F,MAAML,GAAG,GAAG,MAAMjB,aAAa,CAACsB,EAAE,CAAC;EACnC,OAAOL,GAAG;AACd,CAAC,CAAC;AAEF,MAAMO,YAAY,GAAG5B,WAAW,CAAC;EAC7B6B,IAAI,EAAE,SAAS;EACfrB,YAAY;EACZsB,QAAQ,EAAE;IACNC,KAAK,CAACC,KAAK,EAAEC,MAAM,EAAE;MACjB,OAAOzB,YAAY;IACvB,CAAC;IACD0B,gBAAgB,CAACF,KAAK,EAAEC,MAAM,EAAE;MAC5B,OAAO;QACH,GAAGD,KAAK;QACRf,UAAU,EAAEgB,MAAM,CAACE;MACvB,CAAC;IACL,CAAC;IACDC,mBAAmB,CAACJ,KAAK,EAAEC,MAAM,EAAE;MAC/B,OAAO;QACH,GAAGD,KAAK;QACRlB,aAAa,EAAEmB,MAAM,CAACE;MAC1B,CAAC;IACL,CAAC;IACDE,mBAAmB,CAACL,KAAK,EAAEC,MAAM,EAAE;MAC/B,OAAO;QACH,GAAGD,KAAK;QACRhB,aAAa,EAAEiB,MAAM,CAACE;MAC1B,CAAC;IACL;EACJ,CAAC;EACDG,aAAa,EAAGC,KAAK,IAAK;IACtBA,KAAK,CACAC,OAAO,CAACrB,yBAAyB,CAACsB,SAAS,EAAGT,KAAK,IAAK;MACrD,OAAO;QACH,GAAGA,KAAK;QACRrB,QAAQ,EAAE,IAAI;QACdF,OAAO,EAAE;MACb,CAAC;IACL,CAAC,CAAC,CACD+B,OAAO,CAAClB,0BAA0B,CAACmB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC9D,OAAO;QACH,GAAGD,KAAK;QACRvB,OAAO,EAAE,KAAK;QACdE,QAAQ,EAAEsB,MAAM,CAACE,OAAO,CAACf;QACzB;MACJ,CAAC;IACL,CAAC,CAAC,CACDoB,OAAO,CAAChB,kBAAkB,CAACiB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACtD,OAAO;QACH,GAAGD,KAAK;QACRvB,OAAO,EAAE,KAAK;QACdK,aAAa,EAAE;MACnB,CAAC;IACL,CAAC,CAAC,CACD0B,OAAO,CAACjB,kBAAkB,CAACkB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACtD,OAAO;QACH,GAAGD,KAAK;QACRvB,OAAO,EAAE,KAAK;QACdO,aAAa,EAAE;MACnB,CAAC;IACL,CAAC,CAAC,CACDwB,OAAO,CAACf,mBAAmB,CAACgB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACvD,OAAO;QACH,GAAGD,KAAK;QACRvB,OAAO,EAAE,KAAK;QACdG,MAAM,EAAEqB,MAAM,CAACE,OAAO,CAACf;MAC3B,CAAC;IACL,CAAC,CAAC,CACDsB,UAAU,CACPzC,SAAS,CACLkB,yBAAyB,EACzBG,0BAA0B,EAC1BC,kBAAkB,EAClBC,kBAAkB,EAClBA,kBAAkB,CACrB,EACD,CAACQ,KAAK,EAAEC,MAAM,KAAK;MACf,OAAO;QACH,GAAGD,KAAK;QACRvB,OAAO,EAAE;MACb,CAAC;IACL,CAAC,CACJ,CACAiC,UAAU,CACPxC,UAAU,CACNiB,yBAAyB,EACzBG,0BAA0B,EAC1BC,kBAAkB,EAClBC,kBAAkB,EAClBA,kBAAkB,CACrB,EACD,CAACQ,KAAK,EAAEC,MAAM,KAAK;MACf,OAAO;QACH,GAAGD,KAAK;QACRvB,OAAO,EAAE;MACb,CAAC;IACL,CAAC,CACJ;EACT;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEsB,KAAK;EAAEG,gBAAgB;EAAEE,mBAAmB;EAAEC;AAAoB,CAAC,GAAGT,YAAY,CAACe,OAAO;AAEzG,eAAef,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module"}