{"ast":null,"code":"import { DAY_TIME } from \"../constants/date-time.constant\";\nexport const dateTimeToDateStr = function (dateTime) {\n  let valueReturnDefault = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  // yyyy-MM-dd\n  if (dateTime) {\n    const newDate = new Date(dateTime);\n    // newDate.setHours(7, 0, 0, 0)\n    // return newDate.toISOString().slice(0, 10)\n    const year = newDate.getFullYear();\n    const month = (1 + newDate.getMonth()).toString().padStart(2, '0');\n    const day = newDate.getDate().toString().padStart(2, '0');\n\n    // return day  + '/' +  month + '/' + year;\n\n    return `${year}-${month}-${day}`;\n  }\n  return valueReturnDefault;\n};\nexport const dateDiff = function (fromDate, toDate) {\n  let totalDayOfmonth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 31;\n  const diff = Math.floor(toDate.getTime() - fromDate.getTime());\n  const days = Math.floor(diff / DAY_TIME);\n  const months = Math.floor(days / totalDayOfmonth);\n  const years = Math.floor(months / 12);\n  return {\n    days,\n    months,\n    years\n  };\n};","map":{"version":3,"names":["DAY_TIME","dateTimeToDateStr","dateTime","valueReturnDefault","newDate","Date","year","getFullYear","month","getMonth","toString","padStart","day","getDate","dateDiff","fromDate","toDate","totalDayOfmonth","diff","Math","floor","getTime","days","months","years"],"sources":["D:/DEVMASTER/DEV2206LM_SpringBoot/project-qlsinhvien/ql-sinh-vien/src/shared/utils/data-time.util.ts"],"sourcesContent":["import { DAY_TIME } from \"../constants/date-time.constant\"\r\n\r\nexport const dateTimeToDateStr = (dateTime: any, valueReturnDefault = null) => { // yyyy-MM-dd\r\n    if (dateTime) {\r\n        const newDate = new Date(dateTime)\r\n        // newDate.setHours(7, 0, 0, 0)\r\n        // return newDate.toISOString().slice(0, 10)\r\n        const year = newDate.getFullYear();\r\n        const month = (1 + newDate.getMonth()).toString().padStart(2, '0');\r\n        const day = newDate.getDate().toString().padStart(2, '0');\r\n    \r\n        // return day  + '/' +  month + '/' + year;\r\n\r\n        return `${year}-${month}-${day}`\r\n        \r\n    }\r\n    return valueReturnDefault\r\n}\r\n\r\nexport const dateDiff = (fromDate: Date, toDate: Date, totalDayOfmonth = 31): { days: number, months: number, years: number } => {\r\n    const diff = Math.floor(toDate.getTime() - fromDate.getTime());\r\n    const days = Math.floor(diff / DAY_TIME);\r\n    const months = Math.floor(days / totalDayOfmonth);\r\n    const years = Math.floor(months / 12);\r\n    return {\r\n        days,\r\n        months,\r\n        years\r\n    }\r\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iCAAiC;AAE1D,OAAO,MAAMC,iBAAiB,GAAG,UAACC,QAAa,EAAgC;EAAA,IAA9BC,kBAAkB,uEAAG,IAAI;EAAO;EAC7E,IAAID,QAAQ,EAAE;IACV,MAAME,OAAO,GAAG,IAAIC,IAAI,CAACH,QAAQ,CAAC;IAClC;IACA;IACA,MAAMI,IAAI,GAAGF,OAAO,CAACG,WAAW,EAAE;IAClC,MAAMC,KAAK,GAAG,CAAC,CAAC,GAAGJ,OAAO,CAACK,QAAQ,EAAE,EAAEC,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAClE,MAAMC,GAAG,GAAGR,OAAO,CAACS,OAAO,EAAE,CAACH,QAAQ,EAAE,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;;IAEzD;;IAEA,OAAQ,GAAEL,IAAK,IAAGE,KAAM,IAAGI,GAAI,EAAC;EAEpC;EACA,OAAOT,kBAAkB;AAC7B,CAAC;AAED,OAAO,MAAMW,QAAQ,GAAG,UAACC,QAAc,EAAEC,MAAY,EAA4E;EAAA,IAA1EC,eAAe,uEAAG,EAAE;EACvE,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAACK,OAAO,EAAE,GAAGN,QAAQ,CAACM,OAAO,EAAE,CAAC;EAC9D,MAAMC,IAAI,GAAGH,IAAI,CAACC,KAAK,CAACF,IAAI,GAAGlB,QAAQ,CAAC;EACxC,MAAMuB,MAAM,GAAGJ,IAAI,CAACC,KAAK,CAACE,IAAI,GAAGL,eAAe,CAAC;EACjD,MAAMO,KAAK,GAAGL,IAAI,CAACC,KAAK,CAACG,MAAM,GAAG,EAAE,CAAC;EACrC,OAAO;IACHD,IAAI;IACJC,MAAM;IACNC;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module"}