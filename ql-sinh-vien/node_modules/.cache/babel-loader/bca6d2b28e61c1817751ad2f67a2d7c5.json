{"ast":null,"code":"import { createAsyncThunk, createSlice, isPending, isRejected } from \"@reduxjs/toolkit\";\nimport { createStudent, filterStudent, getByIdStudent, updateStudent } from \"../../../shared/api/student.api\";\n// import { createUser, filterUser, getByIdUser, updateUser } from \"../../../shared/apis/user.api\";\n// import { serializeAxiosError } from \"../../../shared/utils/reducer.utils\";\n\nconst initialState = {\n  loading: false,\n  errorMessage: null,\n  entities: null,\n  entity: {},\n  updating: false,\n  updateSuccess: false,\n  creating: false,\n  createSuccess: false,\n  pageSearch: 1,\n  totalCount: 0\n};\nexport const emptyStudentUntitiesAsync = createAsyncThunk('student/empty', async data => {\n  const res = '';\n  return res;\n}, {\n  // serializeError: serializeAxiosError,\n});\nexport const searchStudentEntitiesAsync = createAsyncThunk('student/search', async data => {\n  const res = await filterStudent(data);\n  return res;\n});\nexport const createStudentAsync = createAsyncThunk('student/create', async data => {\n  const res = await createStudent(data);\n  return res;\n}, {\n  // serializeError: serializeAxiosError,\n});\nexport const updateStudentAsync = createAsyncThunk('student/update', async bo => {\n  const res = await updateStudent(data);\n  return res;\n}, {\n  // serializeError: serializeAxiosError,\n});\nexport const getByIdStudentAsync = createAsyncThunk('student/get-by-id', async id => {\n  const res = await getByIdStudent(id);\n  return res;\n}, {\n  // serializeError: serializeAxiosError,\n});\nconst StudentSlice = createSlice({\n  name: 'Student',\n  initialState,\n  reducers: {\n    reset(state, action) {\n      return initialState;\n    },\n    changePageSearch(state, action) {\n      return {\n        ...state,\n        pageSearch: action.payload\n      };\n    },\n    changeUpdateSuccess(state, action) {\n      return {\n        ...state,\n        updateSuccess: action.payload\n      };\n    },\n    changeCreateSuccess(state, action) {\n      return {\n        ...state,\n        createSuccess: action.payload\n      };\n    }\n  },\n  extraReducers: build => {\n    build.addCase(emptyStudentUntitiesAsync.fulfilled, state => {\n      return {\n        ...state,\n        entities: null,\n        loading: false\n      };\n    }).addCase(searchStudentEntitiesAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        entities: action.payload.data\n        // totalCount: parseInt(action.payload.headers[TOTAL_HEADER])\n      };\n    }).addCase(updateStudentAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        updateSuccess: true\n      };\n    }).addCase(createStudentAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        createSuccess: true\n      };\n    }).addCase(getByIdStudentAsync.fulfilled, (state, action) => {\n      return {\n        ...state,\n        loading: false,\n        entity: action.payload.data\n      };\n    }).addMatcher(isPending(emptyStudentUntitiesAsync, searchStudentEntitiesAsync, createStudentAsync, updateStudentAsync, updateStudentAsync), (state, action) => {\n      return {\n        ...state,\n        loading: true\n      };\n    }).addMatcher(isRejected(emptyStudentUntitiesAsync, searchStudentEntitiesAsync, createStudentAsync, updateStudentAsync, updateStudentAsync), (state, action) => {\n      return {\n        ...state,\n        loading: false\n      };\n    });\n  }\n});\nexport const {\n  reset,\n  changePageSearch,\n  changeUpdateSuccess,\n  changeCreateSuccess\n} = StudentSlice.actions;\nexport default StudentSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","isPending","isRejected","createStudent","filterStudent","getByIdStudent","updateStudent","initialState","loading","errorMessage","entities","entity","updating","updateSuccess","creating","createSuccess","pageSearch","totalCount","emptyStudentUntitiesAsync","data","res","searchStudentEntitiesAsync","createStudentAsync","updateStudentAsync","bo","getByIdStudentAsync","id","StudentSlice","name","reducers","reset","state","action","changePageSearch","payload","changeUpdateSuccess","changeCreateSuccess","extraReducers","build","addCase","fulfilled","addMatcher","actions","reducer"],"sources":["D:/DEVMASTER/DEV2206LM_SpringBoot/ql-sinh-vien(b2)/ql-sinh-vien/src/features/Students/redux/student.reducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, isPending, isRejected } from \"@reduxjs/toolkit\";\r\nimport { createStudent, filterStudent, getByIdStudent, updateStudent } from \"../../../shared/api/student.api\";\r\n// import { createUser, filterUser, getByIdUser, updateUser } from \"../../../shared/apis/user.api\";\r\n// import { serializeAxiosError } from \"../../../shared/utils/reducer.utils\";\r\n\r\nconst initialState: any = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: null,\r\n  entity: {},\r\n  updating: false,\r\n  updateSuccess: false,\r\n  creating: false,\r\n  createSuccess: false,\r\n  pageSearch: 1,\r\n  totalCount: 0,\r\n};\r\n\r\nexport const emptyStudentUntitiesAsync = createAsyncThunk('student/empty', async (data: any) => {\r\n  const res = '';\r\n  return (res)\r\n}, {\r\n  // serializeError: serializeAxiosError,\r\n});\r\n\r\nexport const searchStudentEntitiesAsync = createAsyncThunk('student/search', async (data: any) => {\r\n  const res = await filterStudent(data);\r\n  return (res)\r\n});\r\n\r\nexport const createStudentAsync = createAsyncThunk('student/create', async (data: any) => {\r\n  const res = await createStudent(data);\r\n  return (res)\r\n}, {\r\n  // serializeError: serializeAxiosError,\r\n});\r\n\r\nexport const updateStudentAsync = createAsyncThunk('student/update', async (bo: any) => {\r\n  const res = await updateStudent(data);\r\n  return (res)\r\n}, {\r\n  // serializeError: serializeAxiosError,\r\n});\r\n\r\nexport const getByIdStudentAsync = createAsyncThunk('student/get-by-id', async (id: any) => {\r\n  const res = await getByIdStudent(id);\r\n  return (res)\r\n}, {\r\n  // serializeError: serializeAxiosError,\r\n});\r\n\r\n\r\n\r\nconst StudentSlice = createSlice({\r\n  name: 'Student',\r\n  initialState,\r\n  reducers: {\r\n    reset(state, action) {\r\n      return initialState;\r\n    },\r\n    changePageSearch(state, action) {\r\n      return {\r\n        ...state,\r\n        pageSearch: action.payload\r\n      }\r\n    },\r\n    changeUpdateSuccess(state, action) {\r\n      return {\r\n        ...state,\r\n        updateSuccess: action.payload\r\n      }\r\n    },\r\n    changeCreateSuccess(state, action) {\r\n      return {\r\n        ...state,\r\n        createSuccess: action.payload\r\n      }\r\n    }\r\n  },\r\n  extraReducers: build => {\r\n    build\r\n      .addCase(emptyStudentUntitiesAsync.fulfilled, (state) => {\r\n        return {\r\n          ...state,\r\n          entities: null,\r\n          loading: false\r\n        }\r\n      })\r\n      .addCase(searchStudentEntitiesAsync.fulfilled, (state, action) => {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          entities: action.payload.data,\r\n          // totalCount: parseInt(action.payload.headers[TOTAL_HEADER])\r\n        }\r\n      })\r\n      .addCase(updateStudentAsync.fulfilled, (state, action) => {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          updateSuccess: true,\r\n        }\r\n      })\r\n      .addCase(createStudentAsync.fulfilled, (state, action) => {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          createSuccess: true,\r\n        }\r\n      })\r\n      .addCase(getByIdStudentAsync.fulfilled, (state, action) => {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          entity: action.payload.data\r\n        }\r\n      })\r\n      .addMatcher(isPending(emptyStudentUntitiesAsync, searchStudentEntitiesAsync, createStudentAsync, updateStudentAsync, updateStudentAsync), (state, action) => {\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        }\r\n      })\r\n      .addMatcher(isRejected(emptyStudentUntitiesAsync, searchStudentEntitiesAsync, createStudentAsync, updateStudentAsync, updateStudentAsync), (state, action) => {\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n        }\r\n      })\r\n  }\r\n});\r\n\r\nexport const { reset, changePageSearch, changeUpdateSuccess, changeCreateSuccess } = StudentSlice.actions;\r\n\r\nexport default StudentSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}